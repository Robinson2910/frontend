{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nexport function useLocalStorageState(initalState, key) {\n  _s();\n  const [value, setValue] = useState(function () {\n    const storedValue = localStorage.getItem(key);\n    return storedValue ? JSON.parse(storedValue) : initalState;\n  });\n  useEffect(function () {\n    localStorage.setItem(key, JSON.stringify(value)); //we can only store key value pairs in local storge that too it should be only strings\n  }, [value, key]);\n  return [value, setValue];\n}\n_s(useLocalStorageState, \"TgKl3K3VNbB0GLGPpA+yOweZaGE=\");","map":{"version":3,"names":["useState","useEffect","useLocalStorageState","initalState","key","_s","value","setValue","storedValue","localStorage","getItem","JSON","parse","setItem","stringify"],"sources":["C:/Users/Robinson/Desktop/front_end/react/usePopcorn/src/useLocalStorageState.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nexport function useLocalStorageState(initalState, key) {\r\n  const [value, setValue] = useState(function () {\r\n    const storedValue = localStorage.getItem(key);\r\n    return storedValue ? JSON.parse(storedValue) : initalState;\r\n  });\r\n  useEffect(\r\n    function () {\r\n      localStorage.setItem(key, JSON.stringify(value)); //we can only store key value pairs in local storge that too it should be only strings\r\n    },\r\n    [value, key]\r\n  );\r\n\r\n  return [value, setValue];\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,SAASC,oBAAoBA,CAACC,WAAW,EAAEC,GAAG,EAAE;EAAAC,EAAA;EACrD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,YAAY;IAC7C,MAAMQ,WAAW,GAAGC,YAAY,CAACC,OAAO,CAACN,GAAG,CAAC;IAC7C,OAAOI,WAAW,GAAGG,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,GAAGL,WAAW;EAC5D,CAAC,CAAC;EACFF,SAAS,CACP,YAAY;IACVQ,YAAY,CAACI,OAAO,CAACT,GAAG,EAAEO,IAAI,CAACG,SAAS,CAACR,KAAK,CAAC,CAAC,CAAC,CAAC;EACpD,CAAC,EACD,CAACA,KAAK,EAAEF,GAAG,CACb,CAAC;EAED,OAAO,CAACE,KAAK,EAAEC,QAAQ,CAAC;AAC1B;AAACF,EAAA,CAbeH,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}