{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Robinson\\\\Desktop\\\\front_end\\\\react\\\\usePopcorn\\\\src\\\\Starrating.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  display: \"flex\",\n  alignItems: \"center\",\n  gap: \"16px\"\n};\nconst starContainerStyle = {\n  display: \"flex\"\n};\nconst textStyle = {\n  lineHeight: \"1\",\n  margin: \"0\"\n};\n\n//setting default values for the props\n\n/*Summary of the Star rating compononet\r\nThere is a div and inside that there is div for rendering stars and there is para ,so these two elements are arranged using flex \r\n\r\nand inside the div where stars are rendered\r\n\r\nwe just use the normal rendering list strategy of passing array of jsx code into the javascript mode and react renders it\r\n\r\n//this time the array is created using Array.from and inside each index of array star component is stored\r\n\r\n//for each star component onRate handler fn is passed as prop\r\n//that handler fn can call the handleRating fn which results in child-parent communication\r\n//that handler fn has access to the parameter i of the Array.from  map method due to closure\r\n\r\n//so each time the handler fn is called rating is set according to that index\r\n\r\n//Hope u understood dumbo\r\n*/\nStarRating.propTypes = {\n  maxRating: PropTypes.number,\n  defaultRating: PropTypes.number,\n  color: PropTypes.string,\n  size: PropTypes.number,\n  messages: PropTypes.array,\n  className: PropTypes.string,\n  onSetRating: PropTypes.func\n};\nexport default function StarRating({\n  maxRating = 5,\n  color = \"#fcc419\",\n  size = 48,\n  className = \"\",\n  messages = [],\n  defaultRating = 0,\n  onSetRating\n}) {\n  _s();\n  const [rating, setRating] = useState(defaultRating);\n  const [tempRating, setTempRating] = useState(0);\n  function handleRating(rating) {\n    setRating(rating);\n    onSetRating(rating);\n  }\n  function handleTempRating(rating) {\n    setTempRating(rating);\n  }\n  const textStyle = {\n    lineHeight: \"1\",\n    margin: \"0\",\n    color,\n    fontSize: `${size / 1.5}px`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: starContainerStyle,\n      children: Array.from({\n        length: maxRating\n      }, (_, i) =>\n      /*#__PURE__*/\n      // returning jsx\n      // In JavaScript, a closure is a function that has access to the variables and parameters of its outer (enclosing) function, even after the outer function has finished executing\n      //so here the handler fn has access to the parameter i and the value which was orginally passed at\n      //here the handler fn which is passed as a prop has acces to the variable i via closure\n      // onRate={() => {\n      //   console.log(i);\n      //   handleRating(i + 1);\n      // }}\n      _jsxDEV(Star, {\n        id: i + 1,\n        rating: rating,\n        onRating: handleRating,\n        tempRating: tempRating,\n        onTempRating: handleTempRating,\n        color: color,\n        size: size\n      }, i + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: textStyle,\n      children: messages.length === maxRating ? messages[tempRating ? tempRating - 1 : rating - 1] : tempRating || rating || \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(StarRating, \"zxHW7770npoHJ7dui4KswdCD1RI=\");\n_c = StarRating;\nfunction Star({\n  id,\n  rating,\n  onRating,\n  onTempRating,\n  tempRating,\n  color,\n  size\n}) {\n  const starStyle = {\n    width: `${size}px`,\n    height: `${size}px`,\n    display: \"block\",\n    cursor: \"pointer\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    style: starStyle,\n    onClick: () => onRating(id),\n    onMouseEnter: () => onTempRating(id),\n    onMouseLeave: () => {\n      onTempRating(0);\n      onRating(rating);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 20 20\",\n      fill: tempRating ? tempRating >= id ? color : \"#000\" : rating >= id ? color : \"#000\",\n      stroke: color,\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n/* <svg\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  viewBox=\"0 0 20 20\"\r\n  fill=\"#000\"\r\n  stroke=\"#000\"\r\n>\r\n  <path\r\n    d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\"\r\n  />\r\n</svg>\r\n\r\n\r\nEMPTY STAR\r\n\r\n<svg\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  fill=\"none\"\r\n  viewBox=\"0 0 24 24\"\r\n  stroke=\"#000\"\r\n>\r\n  <path\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    strokeWidth=\"{2}\"\r\n    d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"\r\n  />\r\n</svg>\r\n\r\n*/\n_c2 = Star;\nvar _c, _c2;\n$RefreshReg$(_c, \"StarRating\");\n$RefreshReg$(_c2, \"Star\");","map":{"version":3,"names":["useState","PropTypes","jsxDEV","_jsxDEV","containerStyle","display","alignItems","gap","starContainerStyle","textStyle","lineHeight","margin","StarRating","propTypes","maxRating","number","defaultRating","color","string","size","messages","array","className","onSetRating","func","_s","rating","setRating","tempRating","setTempRating","handleRating","handleTempRating","fontSize","style","children","Array","from","length","_","i","Star","id","onRating","onTempRating","fileName","_jsxFileName","lineNumber","columnNumber","_c","starStyle","width","height","cursor","onClick","onMouseEnter","onMouseLeave","xmlns","viewBox","fill","stroke","d","_c2","$RefreshReg$"],"sources":["C:/Users/Robinson/Desktop/front_end/react/usePopcorn/src/Starrating.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst containerStyle = {\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  gap: \"16px\",\r\n};\r\nconst starContainerStyle = {\r\n  display: \"flex\",\r\n};\r\nconst textStyle = {\r\n  lineHeight: \"1\",\r\n  margin: \"0\",\r\n};\r\n\r\n//setting default values for the props\r\n\r\n/*Summary of the Star rating compononet\r\nThere is a div and inside that there is div for rendering stars and there is para ,so these two elements are arranged using flex \r\n\r\nand inside the div where stars are rendered\r\n\r\nwe just use the normal rendering list strategy of passing array of jsx code into the javascript mode and react renders it\r\n\r\n//this time the array is created using Array.from and inside each index of array star component is stored\r\n\r\n//for each star component onRate handler fn is passed as prop\r\n//that handler fn can call the handleRating fn which results in child-parent communication\r\n//that handler fn has access to the parameter i of the Array.from  map method due to closure\r\n\r\n//so each time the handler fn is called rating is set according to that index\r\n\r\n//Hope u understood dumbo\r\n*/\r\nStarRating.propTypes = {\r\n  maxRating: PropTypes.number,\r\n  defaultRating: PropTypes.number,\r\n  color: PropTypes.string,\r\n  size: PropTypes.number,\r\n  messages: PropTypes.array,\r\n  className: PropTypes.string,\r\n  onSetRating: PropTypes.func,\r\n};\r\nexport default function StarRating({\r\n  maxRating = 5,\r\n  color = \"#fcc419\",\r\n  size = 48,\r\n  className = \"\",\r\n  messages = [],\r\n  defaultRating = 0,\r\n  onSetRating,\r\n}) {\r\n  const [rating, setRating] = useState(defaultRating);\r\n  const [tempRating, setTempRating] = useState(0);\r\n  function handleRating(rating) {\r\n    setRating(rating);\r\n    onSetRating(rating);\r\n  }\r\n  function handleTempRating(rating) {\r\n    setTempRating(rating);\r\n  }\r\n  const textStyle = {\r\n    lineHeight: \"1\",\r\n    margin: \"0\",\r\n    color,\r\n    fontSize: `${size / 1.5}px`,\r\n  };\r\n  return (\r\n    <div style={containerStyle} className={className}>\r\n      <div style={starContainerStyle}>\r\n        {Array.from({ length: maxRating }, (_, i) => (\r\n          // returning jsx\r\n          // In JavaScript, a closure is a function that has access to the variables and parameters of its outer (enclosing) function, even after the outer function has finished executing\r\n          //so here the handler fn has access to the parameter i and the value which was orginally passed at\r\n          //here the handler fn which is passed as a prop has acces to the variable i via closure\r\n          // onRate={() => {\r\n          //   console.log(i);\r\n\r\n          //   handleRating(i + 1);\r\n          // }}\r\n          <Star\r\n            key={i + 1}\r\n            id={i + 1}\r\n            rating={rating}\r\n            onRating={handleRating}\r\n            tempRating={tempRating}\r\n            onTempRating={handleTempRating}\r\n            color={color}\r\n            size={size}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <p style={textStyle}>\r\n        {messages.length === maxRating\r\n          ? messages[tempRating ? tempRating - 1 : rating - 1]\r\n          : tempRating || rating || \"\"}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Star({ id, rating, onRating, onTempRating, tempRating, color, size }) {\r\n  const starStyle = {\r\n    width: `${size}px`,\r\n    height: `${size}px`,\r\n    display: \"block\",\r\n    cursor: \"pointer\",\r\n  };\r\n  return (\r\n    <span\r\n      style={starStyle}\r\n      onClick={() => onRating(id)}\r\n      onMouseEnter={() => onTempRating(id)}\r\n      onMouseLeave={() => {\r\n        onTempRating(0);\r\n        onRating(rating);\r\n      }}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill={\r\n          tempRating\r\n            ? tempRating >= id\r\n              ? color\r\n              : \"#000\"\r\n            : rating >= id\r\n            ? color\r\n            : \"#000\"\r\n        }\r\n        stroke={color}\r\n      >\r\n        <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n      </svg>\r\n    </span>\r\n  );\r\n}\r\n\r\n/* <svg\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  viewBox=\"0 0 20 20\"\r\n  fill=\"#000\"\r\n  stroke=\"#000\"\r\n>\r\n  <path\r\n    d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\"\r\n  />\r\n</svg>\r\n\r\n\r\nEMPTY STAR\r\n\r\n<svg\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  fill=\"none\"\r\n  viewBox=\"0 0 24 24\"\r\n  stroke=\"#000\"\r\n>\r\n  <path\r\n    strokeLinecap=\"round\"\r\n    strokeLinejoin=\"round\"\r\n    strokeWidth=\"{2}\"\r\n    d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"\r\n  />\r\n</svg>\r\n\r\n*/\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}